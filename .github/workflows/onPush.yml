name: Change latest SHA

on:
    # Workflow Dispatch acts as Schedule here
    workflow_dispatch:
    push:
      branches:
        - 'release/*.*.0'

env:
  GH_TOKEN: ${{ secrets.TOLKIEN }}
  NEXT_MINOR: ${{ vars.NEXT_MINOR }}
  RELEASE_BRANCH: "release/${{vars.MAYOR}}.${{vars.NEXT_MINOR}}.0"
  SALESFORCE_VERSION: ${{ vars.SALESFORCE_VERSION }}
  VERSION_NUMBER: "${{ vars.MAYOR }}.${{ vars.NEXT_MINOR }}.0"

jobs:
  change-sha:
    permissions:
      contents: write
    outputs:
      create-package: ${{ steps.update-variables.outputs.create-package }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Get the HEAD SHA"
        id: get-sha
        run: |
          echo "CUR_HEAD=$(git --no-pager log -1 --format=format:%H -- force-app/main/default)" >> $GITHUB_ENV
      - name: "Create Branch"
        id: new-branch
        if: ${{ github.event_name == 'workflow_dispatch' && env.CUR_HEAD != vars.PREV_HEAD }}
        run: |
          git branch $RELEASE_BRANCH
          git push -u origin $RELEASE_BRANCH
      - name: "Update Variables"
        id: update-variables
        if: ${{ steps.new-branch.outcome == 'success' || github.ref_name == env.RELEASE_BRANCH }}
        run: |
          gh variable set PREV_HEAD --body $CUR_HEAD
          gh variable set NEXT_MINOR --body $((NEXT_MINOR + 1))
          echo "create-package=true" >> $GITHUB_OUTPUT

  do-stuff:
    needs: change-sha
    permissions:
      contents: write
    if: ${{ needs.change-sha.outputs.create-package == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4
        with:
          ref: ${{ env.RELEASE_BRANCH }}
      - name: "Replace Stuff"
        run: |
          cp releaseForceignore.txt .forceignore
          sed -i'' -e "s/PACKAGE_NAME/COCONUT '56 $VERSION_NUMBER/" cumulusci.yml
      - name: "Push to branch to see if the changes were made"
        run: |
          git add .
          git commit -m "GITHUB ACTIONS WUZ HERE, LULZ"
          git push origin $RELEASE_BRANCH
